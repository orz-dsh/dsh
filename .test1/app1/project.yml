name: app1
runtime:
  minVersion: 1.0.0
  maxVersion: 2.0.0
option:
  items:
    - name: test
      usage: "test string value"
      default: c
      choices:
        - 'a'
        - 'b'
        - 'c'
        - 'd'
    - name: test_object
      type: object
      usage: "test object with json format"
      default: '{"a": 1, "b": 2}'
      choices:
        - '{"b": 2, "a": 1}'
        - '{"a": 1, "b": 3}'
        - '{"a": 2, "b": 2}'
    - name: test_array
      type: array
      usage: "test array with json format"
      default: '[1, 2, 3]'
      choices:
        - '[1, 2, 3]'
        - '[2, 3, 4]'
        - '[3, 4, 5]'
    - name: lib1_test
      export: lib1.test
      hidden: true
      compute: >-
        test == 'a' ? '1234' : (test == 'b' ? '5678' : (test == 'c' ? '0000' : nil))
    - name: lib2_test
      export: lib2.test
      hidden: true
      compute: >-
        upper(test)
    - name: lib3_test
      export: lib3.test
      hidden: true
      compute: >-
        test_object.b
    - name: lib4_test
      export: lib4.test
      hidden: true
      compute: >-
        test_array[1]
  checks:
    #    - _os == 'linux'
    - test != 'd'
    - test_object.a == 1
    - test_array[0] == 1
dependency:
  items:
    - link: "dir:./.test1/lib1"
      match: test == 'a'
    - link: "dir:./.test1/lib2"
      match: test == 'a'
resource:
  items:
    - dir: script
      match: test == 'a' || test == 'b'
    - dir: config
      includes:
        - test1.dcfg.yml
      match: test == 'a' || test == 'b'
